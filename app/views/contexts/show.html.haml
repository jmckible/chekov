%h2= @context.name

%p= @context.description

%p= link_to 'Edit Context', [:edit, @context]

= form_tag @context, :method=>:get do
  %p
    %select{name: 'user_id'}
      %option{value: ''} Everyone
      - User.all.each do |u|
        - options = {value: u.id}
        - options[:selected] = 'selected' if u == @user
        %option{options}= u.name
    = submit_tag 'Show'

%table.data
  %tr
    %th Story
    - @context.browsers.each do |browser|
      %th.percent= browser
    %th.percent Blended
  - @context.stories.each do |story|
    %tr
      %td.title
        = story.name
        .edit= link_to 'Edit', [@context, story]
      - @context.browsers.each do |browser|
        - color = {class: 'clickable'}
        - color[:style] = "background-color: #{colorize story.passed_for(browser, @user)}" unless story.suites.for_browser(browser).from_user(@user).count == 0 
        %td.highlight{color}= link_to label_for(story.passed_for(browser, @user)), new_context_story_suite_path(@context, story, 'suite[browser]'=>browser)
      - if story.suites.from_user(@user).count == 0
        %td
      - else
        %td.strong{style: "background-color: #{colorize story.passed_blended(@user)}"}= label_for story.passed_blended(@user)
  %tr.strong
    %td.title Total
    - @context.browsers.each do |browser|
      - if @context.suites.for_browser(browser).from_user(@user).count == 0
        %td
      - else
        %td{style: "background-color: #{colorize @context.passed_for(browser, @user)}"}= label_for @context.passed_for(browser, @user)
    - if @context.suites.from_user(@user).count == 0
      %td
    - else
      %td{style: "background-color: #{colorize @context.passed_blended(@user)}"}= label_for (@context.passed_blended(@user))
    
%p= link_to 'New Story', new_context_story_path(@context)


%br
%br
%table
  %tr
    %th User
    - @context.browsers.each do |browser|
      %th= browser  
  - User.all.each do |user|
    %tr
      %td= user.name
      - @context.browsers.each do |browser|
        %td
          = form_for Assignment.new, remote: true do |f|
            = hidden_field_tag :context_id, @context.id
            = hidden_field_tag :user_id, user.id
            = hidden_field_tag :browser, browser
            = check_box_tag 'assignment', 'true', user.assigned?(@context, browser), user_id: user.id, context_id: @context.id, browser: browser, class: 'assignment'
          
